version: "3.7"
services:

  backend:
    build:
      context: ..
      dockerfile: docker/Dockerfile.prod
    image: doccano_backend:prod
    env_file:
      - ../.env
    volumes:
      - static_volume:/backend/staticfiles
      - media:/backend/media
      - tmp_file:/backend/filepond-temp-uploads
    depends_on:
      - postgres
    networks:
      - network-backend
      - network-frontend

  celery:
    build:
      context: ..
      dockerfile: docker/Dockerfile.prod
    image: doccano_celery:prod
    env_file:
      - ../.env
    volumes:
      - media:/backend/media
      - tmp_file:/backend/filepond-temp-uploads
    entrypoint: ["/opt/bin/prod-celery.sh"]
    depends_on:
      - postgres
      - rabbitmq
    networks:
      - network-backend

  flower:
    build:
      context: ..
      dockerfile: docker/Dockerfile.prod
    image: doccano_flower:prod
    env_file:
      - ../.env
    entrypoint: ["/opt/bin/prod-flower.sh"]
    depends_on:
      - celery
    ports:
      - 5555:5555
    networks:
      - network-backend
      - network-frontend

  rabbitmq:
    image: rabbitmq:3.10.7-alpine
    env_file:
      - ../.env
    ports:
      - 5672:5672
    networks:
      - network-backend

  nginx:
    build:
      context: ..
      dockerfile: docker/Dockerfile.nginx
    image: doccano_nginx:prod
    env_file:
      - ../.env
    command: >
      /bin/sh -c
      "envsubst '
      $${WORKER_PROCESSES}
      '< /etc/nginx/nginx.conf.template
      > /etc/nginx/nginx.conf
      && nginx -g 'daemon off;'"
    volumes:
      - static_volume:/static
      - media:/media
    ports:
      - 80:8080
    depends_on:
      - backend
    networks:
      - network-frontend

  postgres:
    image: postgres:13.3-alpine
    env_file:
      - ../.env
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    networks:
      - network-backend

volumes:
  postgres_data:
  static_volume:
  media:
  tmp_file:

networks:
  network-backend:
  network-frontend:

